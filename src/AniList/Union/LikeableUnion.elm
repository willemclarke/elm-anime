-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Union.LikeableUnion exposing (..)

import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


type alias Fragments decodesTo =
    { onListActivity : SelectionSet decodesTo AniList.Object.ListActivity
    , onTextActivity : SelectionSet decodesTo AniList.Object.TextActivity
    , onMessageActivity : SelectionSet decodesTo AniList.Object.MessageActivity
    , onActivityReply : SelectionSet decodesTo AniList.Object.ActivityReply
    , onThread : SelectionSet decodesTo AniList.Object.Thread
    , onThreadComment : SelectionSet decodesTo AniList.Object.ThreadComment
    }


{-| Build up a selection for this Union by passing in a Fragments record.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo AniList.Union.LikeableUnion
fragments selections____ =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "ListActivity" selections____.onListActivity
        , Object.buildFragment "TextActivity" selections____.onTextActivity
        , Object.buildFragment "MessageActivity" selections____.onMessageActivity
        , Object.buildFragment "ActivityReply" selections____.onActivityReply
        , Object.buildFragment "Thread" selections____.onThread
        , Object.buildFragment "ThreadComment" selections____.onThreadComment
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onListActivity = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onTextActivity = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onMessageActivity = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onActivityReply = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onThread = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onThreadComment = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }
