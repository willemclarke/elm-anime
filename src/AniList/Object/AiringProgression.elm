-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.AiringProgression exposing (..)

import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The episode the stats were recorded at. .5 is the mid point between 2 episodes airing dates.
-}
episode : SelectionSet (Maybe Float) AniList.Object.AiringProgression
episode =
    Object.selectionForField "(Maybe Float)" "episode" [] (Decode.float |> Decode.nullable)


{-| The average score for the media
-}
score : SelectionSet (Maybe Float) AniList.Object.AiringProgression
score =
    Object.selectionForField "(Maybe Float)" "score" [] (Decode.float |> Decode.nullable)


{-| The amount of users watching the anime
-}
watching : SelectionSet (Maybe Int) AniList.Object.AiringProgression
watching =
    Object.selectionForField "(Maybe Int)" "watching" [] (Decode.int |> Decode.nullable)
