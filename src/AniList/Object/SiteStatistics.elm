-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.SiteStatistics exposing (..)

import AniList.Enum.SiteTrendSort
import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias UsersOptionalArguments =
    { sort : OptionalArgument (List (Maybe AniList.Enum.SiteTrendSort.SiteTrendSort))
    , page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-|

  - page - The page
  - perPage - The amount of entries per page, max 25

-}
users :
    (UsersOptionalArguments -> UsersOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.SiteTrendConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.SiteStatistics
users fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { sort = Absent, page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "sort" filledInOptionals____.sort (Encode.enum AniList.Enum.SiteTrendSort.toString |> Encode.maybe |> Encode.list), Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "users" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias AnimeOptionalArguments =
    { sort : OptionalArgument (List (Maybe AniList.Enum.SiteTrendSort.SiteTrendSort))
    , page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-|

  - page - The page
  - perPage - The amount of entries per page, max 25

-}
anime :
    (AnimeOptionalArguments -> AnimeOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.SiteTrendConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.SiteStatistics
anime fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { sort = Absent, page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "sort" filledInOptionals____.sort (Encode.enum AniList.Enum.SiteTrendSort.toString |> Encode.maybe |> Encode.list), Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "anime" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias MangaOptionalArguments =
    { sort : OptionalArgument (List (Maybe AniList.Enum.SiteTrendSort.SiteTrendSort))
    , page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-|

  - page - The page
  - perPage - The amount of entries per page, max 25

-}
manga :
    (MangaOptionalArguments -> MangaOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.SiteTrendConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.SiteStatistics
manga fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { sort = Absent, page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "sort" filledInOptionals____.sort (Encode.enum AniList.Enum.SiteTrendSort.toString |> Encode.maybe |> Encode.list), Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "manga" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias CharactersOptionalArguments =
    { sort : OptionalArgument (List (Maybe AniList.Enum.SiteTrendSort.SiteTrendSort))
    , page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-|

  - page - The page
  - perPage - The amount of entries per page, max 25

-}
characters :
    (CharactersOptionalArguments -> CharactersOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.SiteTrendConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.SiteStatistics
characters fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { sort = Absent, page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "sort" filledInOptionals____.sort (Encode.enum AniList.Enum.SiteTrendSort.toString |> Encode.maybe |> Encode.list), Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "characters" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias StaffOptionalArguments =
    { sort : OptionalArgument (List (Maybe AniList.Enum.SiteTrendSort.SiteTrendSort))
    , page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-|

  - page - The page
  - perPage - The amount of entries per page, max 25

-}
staff :
    (StaffOptionalArguments -> StaffOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.SiteTrendConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.SiteStatistics
staff fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { sort = Absent, page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "sort" filledInOptionals____.sort (Encode.enum AniList.Enum.SiteTrendSort.toString |> Encode.maybe |> Encode.list), Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "staff" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias StudiosOptionalArguments =
    { sort : OptionalArgument (List (Maybe AniList.Enum.SiteTrendSort.SiteTrendSort))
    , page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-|

  - page - The page
  - perPage - The amount of entries per page, max 25

-}
studios :
    (StudiosOptionalArguments -> StudiosOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.SiteTrendConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.SiteStatistics
studios fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { sort = Absent, page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "sort" filledInOptionals____.sort (Encode.enum AniList.Enum.SiteTrendSort.toString |> Encode.maybe |> Encode.list), Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "studios" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias ReviewsOptionalArguments =
    { sort : OptionalArgument (List (Maybe AniList.Enum.SiteTrendSort.SiteTrendSort))
    , page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-|

  - page - The page
  - perPage - The amount of entries per page, max 25

-}
reviews :
    (ReviewsOptionalArguments -> ReviewsOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.SiteTrendConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.SiteStatistics
reviews fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { sort = Absent, page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "sort" filledInOptionals____.sort (Encode.enum AniList.Enum.SiteTrendSort.toString |> Encode.maybe |> Encode.list), Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "reviews" optionalArgs____ object____ (Basics.identity >> Decode.nullable)
