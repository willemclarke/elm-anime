-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.Favourites exposing (..)

import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias AnimeOptionalArguments =
    { page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-| Favourite anime

  - page - The page number
  - perPage - The amount of entries per page, max 25

-}
anime :
    (AnimeOptionalArguments -> AnimeOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.MediaConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.Favourites
anime fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "anime" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias MangaOptionalArguments =
    { page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-| Favourite manga

  - page - The page number
  - perPage - The amount of entries per page, max 25

-}
manga :
    (MangaOptionalArguments -> MangaOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.MediaConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.Favourites
manga fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "manga" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias CharactersOptionalArguments =
    { page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-| Favourite characters

  - page - The page number
  - perPage - The amount of entries per page, max 25

-}
characters :
    (CharactersOptionalArguments -> CharactersOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.CharacterConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.Favourites
characters fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "characters" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias StaffOptionalArguments =
    { page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-| Favourite staff

  - page - The page number
  - perPage - The amount of entries per page, max 25

-}
staff :
    (StaffOptionalArguments -> StaffOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.StaffConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.Favourites
staff fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "staff" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


type alias StudiosOptionalArguments =
    { page : OptionalArgument Int
    , perPage : OptionalArgument Int
    }


{-| Favourite studios

  - page - The page number
  - perPage - The amount of entries per page, max 25

-}
studios :
    (StudiosOptionalArguments -> StudiosOptionalArguments)
    -> SelectionSet decodesTo AniList.Object.StudioConnection
    -> SelectionSet (Maybe decodesTo) AniList.Object.Favourites
studios fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { page = Absent, perPage = Absent }

        optionalArgs____ =
            [ Argument.optional "page" filledInOptionals____.page Encode.int, Argument.optional "perPage" filledInOptionals____.perPage Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "studios" optionalArgs____ object____ (Basics.identity >> Decode.nullable)
