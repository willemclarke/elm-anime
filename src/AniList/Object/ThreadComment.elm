-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.ThreadComment exposing (..)

import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The id of the comment
-}
id : SelectionSet Int AniList.Object.ThreadComment
id =
    Object.selectionForField "Int" "id" [] Decode.int


{-| The user id of the comment's owner
-}
userId : SelectionSet (Maybe Int) AniList.Object.ThreadComment
userId =
    Object.selectionForField "(Maybe Int)" "userId" [] (Decode.int |> Decode.nullable)


{-| The id of thread the comment belongs to
-}
threadId : SelectionSet (Maybe Int) AniList.Object.ThreadComment
threadId =
    Object.selectionForField "(Maybe Int)" "threadId" [] (Decode.int |> Decode.nullable)


type alias CommentOptionalArguments =
    { asHtml : OptionalArgument Bool }


{-| The text content of the comment (Markdown)

  - asHtml - Return the string in pre-parsed html instead of markdown

-}
comment :
    (CommentOptionalArguments -> CommentOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.ThreadComment
comment fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { asHtml = Absent }

        optionalArgs____ =
            [ Argument.optional "asHtml" filledInOptionals____.asHtml Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "comment" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The amount of likes the comment has
-}
likeCount : SelectionSet Int AniList.Object.ThreadComment
likeCount =
    Object.selectionForField "Int" "likeCount" [] Decode.int


{-| If the currently authenticated user liked the comment
-}
isLiked : SelectionSet (Maybe Bool) AniList.Object.ThreadComment
isLiked =
    Object.selectionForField "(Maybe Bool)" "isLiked" [] (Decode.bool |> Decode.nullable)


{-| The url for the comment page on the AniList website
-}
siteUrl : SelectionSet (Maybe String) AniList.Object.ThreadComment
siteUrl =
    Object.selectionForField "(Maybe String)" "siteUrl" [] (Decode.string |> Decode.nullable)


{-| The time of the comments creation
-}
createdAt : SelectionSet Int AniList.Object.ThreadComment
createdAt =
    Object.selectionForField "Int" "createdAt" [] Decode.int


{-| The time of the comments last update
-}
updatedAt : SelectionSet Int AniList.Object.ThreadComment
updatedAt =
    Object.selectionForField "Int" "updatedAt" [] Decode.int


{-| The thread the comment belongs to
-}
thread :
    SelectionSet decodesTo AniList.Object.Thread
    -> SelectionSet (Maybe decodesTo) AniList.Object.ThreadComment
thread object____ =
    Object.selectionForCompositeField "thread" [] object____ (Basics.identity >> Decode.nullable)


{-| The user who created the comment
-}
user :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe decodesTo) AniList.Object.ThreadComment
user object____ =
    Object.selectionForCompositeField "user" [] object____ (Basics.identity >> Decode.nullable)


{-| The users who liked the comment
-}
likes :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.ThreadComment
likes object____ =
    Object.selectionForCompositeField "likes" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| The comment's child reply comments
-}
childComments : SelectionSet (Maybe AniList.ScalarCodecs.Json) AniList.Object.ThreadComment
childComments =
    Object.selectionForField "(Maybe ScalarCodecs.Json)" "childComments" [] (AniList.ScalarCodecs.codecs |> AniList.Scalar.unwrapCodecs |> .codecJson |> .decoder |> Decode.nullable)
