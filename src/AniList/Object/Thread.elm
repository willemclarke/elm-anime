-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.Thread exposing (..)

import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The id of the thread
-}
id : SelectionSet Int AniList.Object.Thread
id =
    Object.selectionForField "Int" "id" [] Decode.int


{-| The title of the thread
-}
title : SelectionSet (Maybe String) AniList.Object.Thread
title =
    Object.selectionForField "(Maybe String)" "title" [] (Decode.string |> Decode.nullable)


type alias BodyOptionalArguments =
    { asHtml : OptionalArgument Bool }


{-| The text body of the thread (Markdown)

  - asHtml - Return the string in pre-parsed html instead of markdown

-}
body :
    (BodyOptionalArguments -> BodyOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.Thread
body fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { asHtml = Absent }

        optionalArgs____ =
            [ Argument.optional "asHtml" filledInOptionals____.asHtml Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "body" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The id of the thread owner user
-}
userId : SelectionSet Int AniList.Object.Thread
userId =
    Object.selectionForField "Int" "userId" [] Decode.int


{-| The id of the user who most recently commented on the thread
-}
replyUserId : SelectionSet (Maybe Int) AniList.Object.Thread
replyUserId =
    Object.selectionForField "(Maybe Int)" "replyUserId" [] (Decode.int |> Decode.nullable)


{-| The id of the most recent comment on the thread
-}
replyCommentId : SelectionSet (Maybe Int) AniList.Object.Thread
replyCommentId =
    Object.selectionForField "(Maybe Int)" "replyCommentId" [] (Decode.int |> Decode.nullable)


{-| The number of comments on the thread
-}
replyCount : SelectionSet (Maybe Int) AniList.Object.Thread
replyCount =
    Object.selectionForField "(Maybe Int)" "replyCount" [] (Decode.int |> Decode.nullable)


{-| The number of times users have viewed the thread
-}
viewCount : SelectionSet (Maybe Int) AniList.Object.Thread
viewCount =
    Object.selectionForField "(Maybe Int)" "viewCount" [] (Decode.int |> Decode.nullable)


{-| If the thread is locked and can receive comments
-}
isLocked : SelectionSet (Maybe Bool) AniList.Object.Thread
isLocked =
    Object.selectionForField "(Maybe Bool)" "isLocked" [] (Decode.bool |> Decode.nullable)


{-| If the thread is stickied and should be displayed at the top of the page
-}
isSticky : SelectionSet (Maybe Bool) AniList.Object.Thread
isSticky =
    Object.selectionForField "(Maybe Bool)" "isSticky" [] (Decode.bool |> Decode.nullable)


{-| If the currently authenticated user is subscribed to the thread
-}
isSubscribed : SelectionSet (Maybe Bool) AniList.Object.Thread
isSubscribed =
    Object.selectionForField "(Maybe Bool)" "isSubscribed" [] (Decode.bool |> Decode.nullable)


{-| The amount of likes the thread has
-}
likeCount : SelectionSet Int AniList.Object.Thread
likeCount =
    Object.selectionForField "Int" "likeCount" [] Decode.int


{-| If the currently authenticated user liked the thread
-}
isLiked : SelectionSet (Maybe Bool) AniList.Object.Thread
isLiked =
    Object.selectionForField "(Maybe Bool)" "isLiked" [] (Decode.bool |> Decode.nullable)


{-| The time of the last reply
-}
repliedAt : SelectionSet (Maybe Int) AniList.Object.Thread
repliedAt =
    Object.selectionForField "(Maybe Int)" "repliedAt" [] (Decode.int |> Decode.nullable)


{-| The time of the thread creation
-}
createdAt : SelectionSet Int AniList.Object.Thread
createdAt =
    Object.selectionForField "Int" "createdAt" [] Decode.int


{-| The time of the thread last update
-}
updatedAt : SelectionSet Int AniList.Object.Thread
updatedAt =
    Object.selectionForField "Int" "updatedAt" [] Decode.int


{-| The owner of the thread
-}
user :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe decodesTo) AniList.Object.Thread
user object____ =
    Object.selectionForCompositeField "user" [] object____ (Basics.identity >> Decode.nullable)


{-| The user to last reply to the thread
-}
replyUser :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe decodesTo) AniList.Object.Thread
replyUser object____ =
    Object.selectionForCompositeField "replyUser" [] object____ (Basics.identity >> Decode.nullable)


{-| The users who liked the thread
-}
likes :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.Thread
likes object____ =
    Object.selectionForCompositeField "likes" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| The url for the thread page on the AniList website
-}
siteUrl : SelectionSet (Maybe String) AniList.Object.Thread
siteUrl =
    Object.selectionForField "(Maybe String)" "siteUrl" [] (Decode.string |> Decode.nullable)


{-| The categories of the thread
-}
categories :
    SelectionSet decodesTo AniList.Object.ThreadCategory
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.Thread
categories object____ =
    Object.selectionForCompositeField "categories" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| The media categories of the thread
-}
mediaCategories :
    SelectionSet decodesTo AniList.Object.Media
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.Thread
mediaCategories object____ =
    Object.selectionForCompositeField "mediaCategories" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)
