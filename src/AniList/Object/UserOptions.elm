-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.UserOptions exposing (..)

import AniList.Enum.UserStaffNameLanguage
import AniList.Enum.UserTitleLanguage
import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The language the user wants to see media titles in
-}
titleLanguage : SelectionSet (Maybe AniList.Enum.UserTitleLanguage.UserTitleLanguage) AniList.Object.UserOptions
titleLanguage =
    Object.selectionForField "(Maybe Enum.UserTitleLanguage.UserTitleLanguage)" "titleLanguage" [] (AniList.Enum.UserTitleLanguage.decoder |> Decode.nullable)


{-| Whether the user has enabled viewing of 18+ content
-}
displayAdultContent : SelectionSet (Maybe Bool) AniList.Object.UserOptions
displayAdultContent =
    Object.selectionForField "(Maybe Bool)" "displayAdultContent" [] (Decode.bool |> Decode.nullable)


{-| Whether the user receives notifications when a show they are watching aires
-}
airingNotifications : SelectionSet (Maybe Bool) AniList.Object.UserOptions
airingNotifications =
    Object.selectionForField "(Maybe Bool)" "airingNotifications" [] (Decode.bool |> Decode.nullable)


{-| Profile highlight color (blue, purple, pink, orange, red, green, gray)
-}
profileColor : SelectionSet (Maybe String) AniList.Object.UserOptions
profileColor =
    Object.selectionForField "(Maybe String)" "profileColor" [] (Decode.string |> Decode.nullable)


{-| Notification options
-}
notificationOptions :
    SelectionSet decodesTo AniList.Object.NotificationOption
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.UserOptions
notificationOptions object____ =
    Object.selectionForCompositeField "notificationOptions" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| The user's timezone offset (Auth user only)
-}
timezone : SelectionSet (Maybe String) AniList.Object.UserOptions
timezone =
    Object.selectionForField "(Maybe String)" "timezone" [] (Decode.string |> Decode.nullable)


{-| Minutes between activity for them to be merged together. 0 is Never, Above 2 weeks (20160 mins) is Always.
-}
activityMergeTime : SelectionSet (Maybe Int) AniList.Object.UserOptions
activityMergeTime =
    Object.selectionForField "(Maybe Int)" "activityMergeTime" [] (Decode.int |> Decode.nullable)


{-| The language the user wants to see staff and character names in
-}
staffNameLanguage : SelectionSet (Maybe AniList.Enum.UserStaffNameLanguage.UserStaffNameLanguage) AniList.Object.UserOptions
staffNameLanguage =
    Object.selectionForField "(Maybe Enum.UserStaffNameLanguage.UserStaffNameLanguage)" "staffNameLanguage" [] (AniList.Enum.UserStaffNameLanguage.decoder |> Decode.nullable)
