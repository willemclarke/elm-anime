-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.MediaTitle exposing (..)

import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias RomajiOptionalArguments =
    { stylised : OptionalArgument Bool }


{-| The romanization of the native language title
-}
romaji :
    (RomajiOptionalArguments -> RomajiOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.MediaTitle
romaji fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { stylised = Absent }

        optionalArgs____ =
            [ Argument.optional "stylised" filledInOptionals____.stylised Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "romaji" optionalArgs____ (Decode.string |> Decode.nullable)


type alias EnglishOptionalArguments =
    { stylised : OptionalArgument Bool }


{-| The official english title
-}
english :
    (EnglishOptionalArguments -> EnglishOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.MediaTitle
english fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { stylised = Absent }

        optionalArgs____ =
            [ Argument.optional "stylised" filledInOptionals____.stylised Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "english" optionalArgs____ (Decode.string |> Decode.nullable)


type alias NativeOptionalArguments =
    { stylised : OptionalArgument Bool }


{-| Official title in it's native language
-}
native :
    (NativeOptionalArguments -> NativeOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.MediaTitle
native fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { stylised = Absent }

        optionalArgs____ =
            [ Argument.optional "stylised" filledInOptionals____.stylised Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "native" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The currently authenticated users preferred title language. Default romaji for non-authenticated
-}
userPreferred : SelectionSet (Maybe String) AniList.Object.MediaTitle
userPreferred =
    Object.selectionForField "(Maybe String)" "userPreferred" [] (Decode.string |> Decode.nullable)
