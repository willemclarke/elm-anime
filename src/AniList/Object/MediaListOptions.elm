-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.MediaListOptions exposing (..)

import AniList.Enum.ScoreFormat
import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The score format the user is using for media lists
-}
scoreFormat : SelectionSet (Maybe AniList.Enum.ScoreFormat.ScoreFormat) AniList.Object.MediaListOptions
scoreFormat =
    Object.selectionForField "(Maybe Enum.ScoreFormat.ScoreFormat)" "scoreFormat" [] (AniList.Enum.ScoreFormat.decoder |> Decode.nullable)


{-| The default order list rows should be displayed in
-}
rowOrder : SelectionSet (Maybe String) AniList.Object.MediaListOptions
rowOrder =
    Object.selectionForField "(Maybe String)" "rowOrder" [] (Decode.string |> Decode.nullable)


useLegacyLists : SelectionSet (Maybe Bool) AniList.Object.MediaListOptions
useLegacyLists =
    Object.selectionForField "(Maybe Bool)" "useLegacyLists" [] (Decode.bool |> Decode.nullable)


{-| The user's anime list options
-}
animeList :
    SelectionSet decodesTo AniList.Object.MediaListTypeOptions
    -> SelectionSet (Maybe decodesTo) AniList.Object.MediaListOptions
animeList object____ =
    Object.selectionForCompositeField "animeList" [] object____ (Basics.identity >> Decode.nullable)


{-| The user's manga list options
-}
mangaList :
    SelectionSet decodesTo AniList.Object.MediaListTypeOptions
    -> SelectionSet (Maybe decodesTo) AniList.Object.MediaListOptions
mangaList object____ =
    Object.selectionForCompositeField "mangaList" [] object____ (Basics.identity >> Decode.nullable)


{-| The list theme options for both lists
-}
sharedTheme : SelectionSet (Maybe AniList.ScalarCodecs.Json) AniList.Object.MediaListOptions
sharedTheme =
    Object.selectionForField "(Maybe ScalarCodecs.Json)" "sharedTheme" [] (AniList.ScalarCodecs.codecs |> AniList.Scalar.unwrapCodecs |> .codecJson |> .decoder |> Decode.nullable)


{-| If the shared theme should be used instead of the individual list themes
-}
sharedThemeEnabled : SelectionSet (Maybe Bool) AniList.Object.MediaListOptions
sharedThemeEnabled =
    Object.selectionForField "(Maybe Bool)" "sharedThemeEnabled" [] (Decode.bool |> Decode.nullable)
