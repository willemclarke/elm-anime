-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.TextActivity exposing (..)

import AniList.Enum.ActivityType
import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The id of the activity
-}
id : SelectionSet Int AniList.Object.TextActivity
id =
    Object.selectionForField "Int" "id" [] Decode.int


{-| The user id of the activity's creator
-}
userId : SelectionSet (Maybe Int) AniList.Object.TextActivity
userId =
    Object.selectionForField "(Maybe Int)" "userId" [] (Decode.int |> Decode.nullable)


{-| The type of activity
-}
type_ : SelectionSet (Maybe AniList.Enum.ActivityType.ActivityType) AniList.Object.TextActivity
type_ =
    Object.selectionForField "(Maybe Enum.ActivityType.ActivityType)" "type" [] (AniList.Enum.ActivityType.decoder |> Decode.nullable)


{-| The number of activity replies
-}
replyCount : SelectionSet Int AniList.Object.TextActivity
replyCount =
    Object.selectionForField "Int" "replyCount" [] Decode.int


type alias TextOptionalArguments =
    { asHtml : OptionalArgument Bool }


{-| The status text (Markdown)

  - asHtml - Return the string in pre-parsed html instead of markdown

-}
text :
    (TextOptionalArguments -> TextOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.TextActivity
text fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { asHtml = Absent }

        optionalArgs____ =
            [ Argument.optional "asHtml" filledInOptionals____.asHtml Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "text" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The url for the activity page on the AniList website
-}
siteUrl : SelectionSet (Maybe String) AniList.Object.TextActivity
siteUrl =
    Object.selectionForField "(Maybe String)" "siteUrl" [] (Decode.string |> Decode.nullable)


{-| If the activity is locked and can receive replies
-}
isLocked : SelectionSet (Maybe Bool) AniList.Object.TextActivity
isLocked =
    Object.selectionForField "(Maybe Bool)" "isLocked" [] (Decode.bool |> Decode.nullable)


{-| If the currently authenticated user is subscribed to the activity
-}
isSubscribed : SelectionSet (Maybe Bool) AniList.Object.TextActivity
isSubscribed =
    Object.selectionForField "(Maybe Bool)" "isSubscribed" [] (Decode.bool |> Decode.nullable)


{-| The amount of likes the activity has
-}
likeCount : SelectionSet Int AniList.Object.TextActivity
likeCount =
    Object.selectionForField "Int" "likeCount" [] Decode.int


{-| If the currently authenticated user liked the activity
-}
isLiked : SelectionSet (Maybe Bool) AniList.Object.TextActivity
isLiked =
    Object.selectionForField "(Maybe Bool)" "isLiked" [] (Decode.bool |> Decode.nullable)


{-| The time the activity was created at
-}
createdAt : SelectionSet Int AniList.Object.TextActivity
createdAt =
    Object.selectionForField "Int" "createdAt" [] Decode.int


{-| The user who created the activity
-}
user :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe decodesTo) AniList.Object.TextActivity
user object____ =
    Object.selectionForCompositeField "user" [] object____ (Basics.identity >> Decode.nullable)


{-| The written replies to the activity
-}
replies :
    SelectionSet decodesTo AniList.Object.ActivityReply
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.TextActivity
replies object____ =
    Object.selectionForCompositeField "replies" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| The users who liked the activity
-}
likes :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.TextActivity
likes object____ =
    Object.selectionForCompositeField "likes" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)
