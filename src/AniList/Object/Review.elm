-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.Review exposing (..)

import AniList.Enum.MediaType
import AniList.Enum.ReviewRating
import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The id of the review
-}
id : SelectionSet Int AniList.Object.Review
id =
    Object.selectionForField "Int" "id" [] Decode.int


{-| The id of the review's creator
-}
userId : SelectionSet Int AniList.Object.Review
userId =
    Object.selectionForField "Int" "userId" [] Decode.int


{-| The id of the review's media
-}
mediaId : SelectionSet Int AniList.Object.Review
mediaId =
    Object.selectionForField "Int" "mediaId" [] Decode.int


{-| For which type of media the review is for
-}
mediaType : SelectionSet (Maybe AniList.Enum.MediaType.MediaType) AniList.Object.Review
mediaType =
    Object.selectionForField "(Maybe Enum.MediaType.MediaType)" "mediaType" [] (AniList.Enum.MediaType.decoder |> Decode.nullable)


{-| A short summary of the review
-}
summary : SelectionSet (Maybe String) AniList.Object.Review
summary =
    Object.selectionForField "(Maybe String)" "summary" [] (Decode.string |> Decode.nullable)


type alias BodyOptionalArguments =
    { asHtml : OptionalArgument Bool }


{-| The main review body text

  - asHtml - Return the string in pre-parsed html instead of markdown

-}
body :
    (BodyOptionalArguments -> BodyOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.Review
body fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { asHtml = Absent }

        optionalArgs____ =
            [ Argument.optional "asHtml" filledInOptionals____.asHtml Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "body" optionalArgs____ (Decode.string |> Decode.nullable)


{-| The total user rating of the review
-}
rating : SelectionSet (Maybe Int) AniList.Object.Review
rating =
    Object.selectionForField "(Maybe Int)" "rating" [] (Decode.int |> Decode.nullable)


{-| The amount of user ratings of the review
-}
ratingAmount : SelectionSet (Maybe Int) AniList.Object.Review
ratingAmount =
    Object.selectionForField "(Maybe Int)" "ratingAmount" [] (Decode.int |> Decode.nullable)


{-| The rating of the review by currently authenticated user
-}
userRating : SelectionSet (Maybe AniList.Enum.ReviewRating.ReviewRating) AniList.Object.Review
userRating =
    Object.selectionForField "(Maybe Enum.ReviewRating.ReviewRating)" "userRating" [] (AniList.Enum.ReviewRating.decoder |> Decode.nullable)


{-| The review score of the media
-}
score : SelectionSet (Maybe Int) AniList.Object.Review
score =
    Object.selectionForField "(Maybe Int)" "score" [] (Decode.int |> Decode.nullable)


{-| If the review is not yet publicly published and is only viewable by creator
-}
private : SelectionSet (Maybe Bool) AniList.Object.Review
private =
    Object.selectionForField "(Maybe Bool)" "private" [] (Decode.bool |> Decode.nullable)


{-| The url for the review page on the AniList website
-}
siteUrl : SelectionSet (Maybe String) AniList.Object.Review
siteUrl =
    Object.selectionForField "(Maybe String)" "siteUrl" [] (Decode.string |> Decode.nullable)


{-| The time of the thread creation
-}
createdAt : SelectionSet Int AniList.Object.Review
createdAt =
    Object.selectionForField "Int" "createdAt" [] Decode.int


{-| The time of the thread last update
-}
updatedAt : SelectionSet Int AniList.Object.Review
updatedAt =
    Object.selectionForField "Int" "updatedAt" [] Decode.int


{-| The creator of the review
-}
user :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe decodesTo) AniList.Object.Review
user object____ =
    Object.selectionForCompositeField "user" [] object____ (Basics.identity >> Decode.nullable)


{-| The media the review is of
-}
media :
    SelectionSet decodesTo AniList.Object.Media
    -> SelectionSet (Maybe decodesTo) AniList.Object.Review
media object____ =
    Object.selectionForCompositeField "media" [] object____ (Basics.identity >> Decode.nullable)
