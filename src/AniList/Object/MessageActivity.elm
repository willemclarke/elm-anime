-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Object.MessageActivity exposing (..)

import AniList.Enum.ActivityType
import AniList.InputObject
import AniList.Interface
import AniList.Object
import AniList.Scalar
import AniList.ScalarCodecs
import AniList.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The id of the activity
-}
id : SelectionSet Int AniList.Object.MessageActivity
id =
    Object.selectionForField "Int" "id" [] Decode.int


{-| The user id of the activity's recipient
-}
recipientId : SelectionSet (Maybe Int) AniList.Object.MessageActivity
recipientId =
    Object.selectionForField "(Maybe Int)" "recipientId" [] (Decode.int |> Decode.nullable)


{-| The user id of the activity's sender
-}
messengerId : SelectionSet (Maybe Int) AniList.Object.MessageActivity
messengerId =
    Object.selectionForField "(Maybe Int)" "messengerId" [] (Decode.int |> Decode.nullable)


{-| The type of the activity
-}
type_ : SelectionSet (Maybe AniList.Enum.ActivityType.ActivityType) AniList.Object.MessageActivity
type_ =
    Object.selectionForField "(Maybe Enum.ActivityType.ActivityType)" "type" [] (AniList.Enum.ActivityType.decoder |> Decode.nullable)


{-| The number of activity replies
-}
replyCount : SelectionSet Int AniList.Object.MessageActivity
replyCount =
    Object.selectionForField "Int" "replyCount" [] Decode.int


type alias MessageOptionalArguments =
    { asHtml : OptionalArgument Bool }


{-| The message text (Markdown)

  - asHtml - Return the string in pre-parsed html instead of markdown

-}
message :
    (MessageOptionalArguments -> MessageOptionalArguments)
    -> SelectionSet (Maybe String) AniList.Object.MessageActivity
message fillInOptionals____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { asHtml = Absent }

        optionalArgs____ =
            [ Argument.optional "asHtml" filledInOptionals____.asHtml Encode.bool ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForField "(Maybe String)" "message" optionalArgs____ (Decode.string |> Decode.nullable)


{-| If the activity is locked and can receive replies
-}
isLocked : SelectionSet (Maybe Bool) AniList.Object.MessageActivity
isLocked =
    Object.selectionForField "(Maybe Bool)" "isLocked" [] (Decode.bool |> Decode.nullable)


{-| If the currently authenticated user is subscribed to the activity
-}
isSubscribed : SelectionSet (Maybe Bool) AniList.Object.MessageActivity
isSubscribed =
    Object.selectionForField "(Maybe Bool)" "isSubscribed" [] (Decode.bool |> Decode.nullable)


{-| The amount of likes the activity has
-}
likeCount : SelectionSet Int AniList.Object.MessageActivity
likeCount =
    Object.selectionForField "Int" "likeCount" [] Decode.int


{-| If the currently authenticated user liked the activity
-}
isLiked : SelectionSet (Maybe Bool) AniList.Object.MessageActivity
isLiked =
    Object.selectionForField "(Maybe Bool)" "isLiked" [] (Decode.bool |> Decode.nullable)


{-| If the message is private and only viewable to the sender and recipients
-}
isPrivate : SelectionSet (Maybe Bool) AniList.Object.MessageActivity
isPrivate =
    Object.selectionForField "(Maybe Bool)" "isPrivate" [] (Decode.bool |> Decode.nullable)


{-| The url for the activity page on the AniList website
-}
siteUrl : SelectionSet (Maybe String) AniList.Object.MessageActivity
siteUrl =
    Object.selectionForField "(Maybe String)" "siteUrl" [] (Decode.string |> Decode.nullable)


{-| The time the activity was created at
-}
createdAt : SelectionSet Int AniList.Object.MessageActivity
createdAt =
    Object.selectionForField "Int" "createdAt" [] Decode.int


{-| The user who the activity message was sent to
-}
recipient :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe decodesTo) AniList.Object.MessageActivity
recipient object____ =
    Object.selectionForCompositeField "recipient" [] object____ (Basics.identity >> Decode.nullable)


{-| The user who sent the activity message
-}
messenger :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe decodesTo) AniList.Object.MessageActivity
messenger object____ =
    Object.selectionForCompositeField "messenger" [] object____ (Basics.identity >> Decode.nullable)


{-| The written replies to the activity
-}
replies :
    SelectionSet decodesTo AniList.Object.ActivityReply
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.MessageActivity
replies object____ =
    Object.selectionForCompositeField "replies" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


{-| The users who liked the activity
-}
likes :
    SelectionSet decodesTo AniList.Object.User
    -> SelectionSet (Maybe (List (Maybe decodesTo))) AniList.Object.MessageActivity
likes object____ =
    Object.selectionForCompositeField "likes" [] object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)
