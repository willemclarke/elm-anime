-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Enum.LikeableType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Types that can be liked
-}
type LikeableType
    = Thread
    | ThreadComment
    | Activity
    | ActivityReply


list : List LikeableType
list =
    [ Thread, ThreadComment, Activity, ActivityReply ]


decoder : Decoder LikeableType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "THREAD" ->
                        Decode.succeed Thread

                    "THREAD_COMMENT" ->
                        Decode.succeed ThreadComment

                    "ACTIVITY" ->
                        Decode.succeed Activity

                    "ACTIVITY_REPLY" ->
                        Decode.succeed ActivityReply

                    _ ->
                        Decode.fail ("Invalid LikeableType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : LikeableType -> String
toString enum____ =
    case enum____ of
        Thread ->
            "THREAD"

        ThreadComment ->
            "THREAD_COMMENT"

        Activity ->
            "ACTIVITY"

        ActivityReply ->
            "ACTIVITY_REPLY"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe LikeableType
fromString enumString____ =
    case enumString____ of
        "THREAD" ->
            Just Thread

        "THREAD_COMMENT" ->
            Just ThreadComment

        "ACTIVITY" ->
            Just Activity

        "ACTIVITY_REPLY" ->
            Just ActivityReply

        _ ->
            Nothing
