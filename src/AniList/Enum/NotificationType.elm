-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Enum.NotificationType exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Notification type enum

  - ActivityMessage - A user has sent you message
  - ActivityReply - A user has replied to your activity
  - Following - A user has followed you
  - ActivityMention - A user has mentioned you in their activity
  - ThreadCommentMention - A user has mentioned you in a forum comment
  - ThreadSubscribed - A user has commented in one of your subscribed forum threads
  - ThreadCommentReply - A user has replied to your forum comment
  - Airing - An anime you are currently watching has aired
  - ActivityLike - A user has liked your activity
  - ActivityReplyLike - A user has liked your activity reply
  - ThreadLike - A user has liked your forum thread
  - ThreadCommentLike - A user has liked your forum comment
  - ActivityReplySubscribed - A user has replied to activity you have also replied to
  - RelatedMediaAddition - A new anime or manga has been added to the site where its related media is on the user's list
  - MediaDataChange - An anime or manga has had a data change that affects how a user may track it in their lists
  - MediaMerge - Anime or manga entries on the user's list have been merged into a single entry
  - MediaDeletion - An anime or manga on the user's list has been deleted from the site

-}
type NotificationType
    = ActivityMessage
    | ActivityReply
    | Following
    | ActivityMention
    | ThreadCommentMention
    | ThreadSubscribed
    | ThreadCommentReply
    | Airing
    | ActivityLike
    | ActivityReplyLike
    | ThreadLike
    | ThreadCommentLike
    | ActivityReplySubscribed
    | RelatedMediaAddition
    | MediaDataChange
    | MediaMerge
    | MediaDeletion


list : List NotificationType
list =
    [ ActivityMessage, ActivityReply, Following, ActivityMention, ThreadCommentMention, ThreadSubscribed, ThreadCommentReply, Airing, ActivityLike, ActivityReplyLike, ThreadLike, ThreadCommentLike, ActivityReplySubscribed, RelatedMediaAddition, MediaDataChange, MediaMerge, MediaDeletion ]


decoder : Decoder NotificationType
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "ACTIVITY_MESSAGE" ->
                        Decode.succeed ActivityMessage

                    "ACTIVITY_REPLY" ->
                        Decode.succeed ActivityReply

                    "FOLLOWING" ->
                        Decode.succeed Following

                    "ACTIVITY_MENTION" ->
                        Decode.succeed ActivityMention

                    "THREAD_COMMENT_MENTION" ->
                        Decode.succeed ThreadCommentMention

                    "THREAD_SUBSCRIBED" ->
                        Decode.succeed ThreadSubscribed

                    "THREAD_COMMENT_REPLY" ->
                        Decode.succeed ThreadCommentReply

                    "AIRING" ->
                        Decode.succeed Airing

                    "ACTIVITY_LIKE" ->
                        Decode.succeed ActivityLike

                    "ACTIVITY_REPLY_LIKE" ->
                        Decode.succeed ActivityReplyLike

                    "THREAD_LIKE" ->
                        Decode.succeed ThreadLike

                    "THREAD_COMMENT_LIKE" ->
                        Decode.succeed ThreadCommentLike

                    "ACTIVITY_REPLY_SUBSCRIBED" ->
                        Decode.succeed ActivityReplySubscribed

                    "RELATED_MEDIA_ADDITION" ->
                        Decode.succeed RelatedMediaAddition

                    "MEDIA_DATA_CHANGE" ->
                        Decode.succeed MediaDataChange

                    "MEDIA_MERGE" ->
                        Decode.succeed MediaMerge

                    "MEDIA_DELETION" ->
                        Decode.succeed MediaDeletion

                    _ ->
                        Decode.fail ("Invalid NotificationType type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : NotificationType -> String
toString enum____ =
    case enum____ of
        ActivityMessage ->
            "ACTIVITY_MESSAGE"

        ActivityReply ->
            "ACTIVITY_REPLY"

        Following ->
            "FOLLOWING"

        ActivityMention ->
            "ACTIVITY_MENTION"

        ThreadCommentMention ->
            "THREAD_COMMENT_MENTION"

        ThreadSubscribed ->
            "THREAD_SUBSCRIBED"

        ThreadCommentReply ->
            "THREAD_COMMENT_REPLY"

        Airing ->
            "AIRING"

        ActivityLike ->
            "ACTIVITY_LIKE"

        ActivityReplyLike ->
            "ACTIVITY_REPLY_LIKE"

        ThreadLike ->
            "THREAD_LIKE"

        ThreadCommentLike ->
            "THREAD_COMMENT_LIKE"

        ActivityReplySubscribed ->
            "ACTIVITY_REPLY_SUBSCRIBED"

        RelatedMediaAddition ->
            "RELATED_MEDIA_ADDITION"

        MediaDataChange ->
            "MEDIA_DATA_CHANGE"

        MediaMerge ->
            "MEDIA_MERGE"

        MediaDeletion ->
            "MEDIA_DELETION"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe NotificationType
fromString enumString____ =
    case enumString____ of
        "ACTIVITY_MESSAGE" ->
            Just ActivityMessage

        "ACTIVITY_REPLY" ->
            Just ActivityReply

        "FOLLOWING" ->
            Just Following

        "ACTIVITY_MENTION" ->
            Just ActivityMention

        "THREAD_COMMENT_MENTION" ->
            Just ThreadCommentMention

        "THREAD_SUBSCRIBED" ->
            Just ThreadSubscribed

        "THREAD_COMMENT_REPLY" ->
            Just ThreadCommentReply

        "AIRING" ->
            Just Airing

        "ACTIVITY_LIKE" ->
            Just ActivityLike

        "ACTIVITY_REPLY_LIKE" ->
            Just ActivityReplyLike

        "THREAD_LIKE" ->
            Just ThreadLike

        "THREAD_COMMENT_LIKE" ->
            Just ThreadCommentLike

        "ACTIVITY_REPLY_SUBSCRIBED" ->
            Just ActivityReplySubscribed

        "RELATED_MEDIA_ADDITION" ->
            Just RelatedMediaAddition

        "MEDIA_DATA_CHANGE" ->
            Just MediaDataChange

        "MEDIA_MERGE" ->
            Just MediaMerge

        "MEDIA_DELETION" ->
            Just MediaDeletion

        _ ->
            Nothing
