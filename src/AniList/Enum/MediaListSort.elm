-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Enum.MediaListSort exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| Media list sort enums
-}
type MediaListSort
    = MediaId
    | MediaIdDesc
    | Score
    | ScoreDesc
    | Status
    | StatusDesc
    | Progress
    | ProgressDesc
    | ProgressVolumes
    | ProgressVolumesDesc
    | Repeat
    | RepeatDesc
    | Priority
    | PriorityDesc
    | StartedOn
    | StartedOnDesc
    | FinishedOn
    | FinishedOnDesc
    | AddedTime
    | AddedTimeDesc
    | UpdatedTime
    | UpdatedTimeDesc
    | MediaTitleRomaji
    | MediaTitleRomajiDesc
    | MediaTitleEnglish
    | MediaTitleEnglishDesc
    | MediaTitleNative
    | MediaTitleNativeDesc
    | MediaPopularity
    | MediaPopularityDesc


list : List MediaListSort
list =
    [ MediaId, MediaIdDesc, Score, ScoreDesc, Status, StatusDesc, Progress, ProgressDesc, ProgressVolumes, ProgressVolumesDesc, Repeat, RepeatDesc, Priority, PriorityDesc, StartedOn, StartedOnDesc, FinishedOn, FinishedOnDesc, AddedTime, AddedTimeDesc, UpdatedTime, UpdatedTimeDesc, MediaTitleRomaji, MediaTitleRomajiDesc, MediaTitleEnglish, MediaTitleEnglishDesc, MediaTitleNative, MediaTitleNativeDesc, MediaPopularity, MediaPopularityDesc ]


decoder : Decoder MediaListSort
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "MEDIA_ID" ->
                        Decode.succeed MediaId

                    "MEDIA_ID_DESC" ->
                        Decode.succeed MediaIdDesc

                    "SCORE" ->
                        Decode.succeed Score

                    "SCORE_DESC" ->
                        Decode.succeed ScoreDesc

                    "STATUS" ->
                        Decode.succeed Status

                    "STATUS_DESC" ->
                        Decode.succeed StatusDesc

                    "PROGRESS" ->
                        Decode.succeed Progress

                    "PROGRESS_DESC" ->
                        Decode.succeed ProgressDesc

                    "PROGRESS_VOLUMES" ->
                        Decode.succeed ProgressVolumes

                    "PROGRESS_VOLUMES_DESC" ->
                        Decode.succeed ProgressVolumesDesc

                    "REPEAT" ->
                        Decode.succeed Repeat

                    "REPEAT_DESC" ->
                        Decode.succeed RepeatDesc

                    "PRIORITY" ->
                        Decode.succeed Priority

                    "PRIORITY_DESC" ->
                        Decode.succeed PriorityDesc

                    "STARTED_ON" ->
                        Decode.succeed StartedOn

                    "STARTED_ON_DESC" ->
                        Decode.succeed StartedOnDesc

                    "FINISHED_ON" ->
                        Decode.succeed FinishedOn

                    "FINISHED_ON_DESC" ->
                        Decode.succeed FinishedOnDesc

                    "ADDED_TIME" ->
                        Decode.succeed AddedTime

                    "ADDED_TIME_DESC" ->
                        Decode.succeed AddedTimeDesc

                    "UPDATED_TIME" ->
                        Decode.succeed UpdatedTime

                    "UPDATED_TIME_DESC" ->
                        Decode.succeed UpdatedTimeDesc

                    "MEDIA_TITLE_ROMAJI" ->
                        Decode.succeed MediaTitleRomaji

                    "MEDIA_TITLE_ROMAJI_DESC" ->
                        Decode.succeed MediaTitleRomajiDesc

                    "MEDIA_TITLE_ENGLISH" ->
                        Decode.succeed MediaTitleEnglish

                    "MEDIA_TITLE_ENGLISH_DESC" ->
                        Decode.succeed MediaTitleEnglishDesc

                    "MEDIA_TITLE_NATIVE" ->
                        Decode.succeed MediaTitleNative

                    "MEDIA_TITLE_NATIVE_DESC" ->
                        Decode.succeed MediaTitleNativeDesc

                    "MEDIA_POPULARITY" ->
                        Decode.succeed MediaPopularity

                    "MEDIA_POPULARITY_DESC" ->
                        Decode.succeed MediaPopularityDesc

                    _ ->
                        Decode.fail ("Invalid MediaListSort type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : MediaListSort -> String
toString enum____ =
    case enum____ of
        MediaId ->
            "MEDIA_ID"

        MediaIdDesc ->
            "MEDIA_ID_DESC"

        Score ->
            "SCORE"

        ScoreDesc ->
            "SCORE_DESC"

        Status ->
            "STATUS"

        StatusDesc ->
            "STATUS_DESC"

        Progress ->
            "PROGRESS"

        ProgressDesc ->
            "PROGRESS_DESC"

        ProgressVolumes ->
            "PROGRESS_VOLUMES"

        ProgressVolumesDesc ->
            "PROGRESS_VOLUMES_DESC"

        Repeat ->
            "REPEAT"

        RepeatDesc ->
            "REPEAT_DESC"

        Priority ->
            "PRIORITY"

        PriorityDesc ->
            "PRIORITY_DESC"

        StartedOn ->
            "STARTED_ON"

        StartedOnDesc ->
            "STARTED_ON_DESC"

        FinishedOn ->
            "FINISHED_ON"

        FinishedOnDesc ->
            "FINISHED_ON_DESC"

        AddedTime ->
            "ADDED_TIME"

        AddedTimeDesc ->
            "ADDED_TIME_DESC"

        UpdatedTime ->
            "UPDATED_TIME"

        UpdatedTimeDesc ->
            "UPDATED_TIME_DESC"

        MediaTitleRomaji ->
            "MEDIA_TITLE_ROMAJI"

        MediaTitleRomajiDesc ->
            "MEDIA_TITLE_ROMAJI_DESC"

        MediaTitleEnglish ->
            "MEDIA_TITLE_ENGLISH"

        MediaTitleEnglishDesc ->
            "MEDIA_TITLE_ENGLISH_DESC"

        MediaTitleNative ->
            "MEDIA_TITLE_NATIVE"

        MediaTitleNativeDesc ->
            "MEDIA_TITLE_NATIVE_DESC"

        MediaPopularity ->
            "MEDIA_POPULARITY"

        MediaPopularityDesc ->
            "MEDIA_POPULARITY_DESC"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe MediaListSort
fromString enumString____ =
    case enumString____ of
        "MEDIA_ID" ->
            Just MediaId

        "MEDIA_ID_DESC" ->
            Just MediaIdDesc

        "SCORE" ->
            Just Score

        "SCORE_DESC" ->
            Just ScoreDesc

        "STATUS" ->
            Just Status

        "STATUS_DESC" ->
            Just StatusDesc

        "PROGRESS" ->
            Just Progress

        "PROGRESS_DESC" ->
            Just ProgressDesc

        "PROGRESS_VOLUMES" ->
            Just ProgressVolumes

        "PROGRESS_VOLUMES_DESC" ->
            Just ProgressVolumesDesc

        "REPEAT" ->
            Just Repeat

        "REPEAT_DESC" ->
            Just RepeatDesc

        "PRIORITY" ->
            Just Priority

        "PRIORITY_DESC" ->
            Just PriorityDesc

        "STARTED_ON" ->
            Just StartedOn

        "STARTED_ON_DESC" ->
            Just StartedOnDesc

        "FINISHED_ON" ->
            Just FinishedOn

        "FINISHED_ON_DESC" ->
            Just FinishedOnDesc

        "ADDED_TIME" ->
            Just AddedTime

        "ADDED_TIME_DESC" ->
            Just AddedTimeDesc

        "UPDATED_TIME" ->
            Just UpdatedTime

        "UPDATED_TIME_DESC" ->
            Just UpdatedTimeDesc

        "MEDIA_TITLE_ROMAJI" ->
            Just MediaTitleRomaji

        "MEDIA_TITLE_ROMAJI_DESC" ->
            Just MediaTitleRomajiDesc

        "MEDIA_TITLE_ENGLISH" ->
            Just MediaTitleEnglish

        "MEDIA_TITLE_ENGLISH_DESC" ->
            Just MediaTitleEnglishDesc

        "MEDIA_TITLE_NATIVE" ->
            Just MediaTitleNative

        "MEDIA_TITLE_NATIVE_DESC" ->
            Just MediaTitleNativeDesc

        "MEDIA_POPULARITY" ->
            Just MediaPopularity

        "MEDIA_POPULARITY_DESC" ->
            Just MediaPopularityDesc

        _ ->
            Nothing
