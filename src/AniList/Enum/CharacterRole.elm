-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Enum.CharacterRole exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| The role the character plays in the media

  - Main - A primary character role in the media
  - Supporting - A supporting character role in the media
  - Background - A background character in the media

-}
type CharacterRole
    = Main
    | Supporting
    | Background


list : List CharacterRole
list =
    [ Main, Supporting, Background ]


decoder : Decoder CharacterRole
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "MAIN" ->
                        Decode.succeed Main

                    "SUPPORTING" ->
                        Decode.succeed Supporting

                    "BACKGROUND" ->
                        Decode.succeed Background

                    _ ->
                        Decode.fail ("Invalid CharacterRole type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : CharacterRole -> String
toString enum____ =
    case enum____ of
        Main ->
            "MAIN"

        Supporting ->
            "SUPPORTING"

        Background ->
            "BACKGROUND"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe CharacterRole
fromString enumString____ =
    case enumString____ of
        "MAIN" ->
            Just Main

        "SUPPORTING" ->
            Just Supporting

        "BACKGROUND" ->
            Just Background

        _ ->
            Nothing
