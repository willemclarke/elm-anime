-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module AniList.Enum.MediaSeason exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Winter - Months December to February
  - Spring - Months March to May
  - Summer - Months June to August
  - Fall - Months September to November

-}
type MediaSeason
    = Winter
    | Spring
    | Summer
    | Fall


list : List MediaSeason
list =
    [ Winter, Spring, Summer, Fall ]


decoder : Decoder MediaSeason
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "WINTER" ->
                        Decode.succeed Winter

                    "SPRING" ->
                        Decode.succeed Spring

                    "SUMMER" ->
                        Decode.succeed Summer

                    "FALL" ->
                        Decode.succeed Fall

                    _ ->
                        Decode.fail ("Invalid MediaSeason type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : MediaSeason -> String
toString enum____ =
    case enum____ of
        Winter ->
            "WINTER"

        Spring ->
            "SPRING"

        Summer ->
            "SUMMER"

        Fall ->
            "FALL"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe MediaSeason
fromString enumString____ =
    case enumString____ of
        "WINTER" ->
            Just Winter

        "SPRING" ->
            Just Spring

        "SUMMER" ->
            Just Summer

        "FALL" ->
            Just Fall

        _ ->
            Nothing
